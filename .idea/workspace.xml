<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="780e1a73-dc5b-4091-8cb5-ec55b7a8a30f" name="변경" comment="feat: 체스게임 게선">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/domain/ai_turn.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/domain/ai_turn.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/domain/user_turn.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/domain/user_turn.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/repositories/i_chess_repository.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/repositories/i_chess_repository.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/routes/v1/chess_routes.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/routes/v1/chess_routes.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/utils/chess_util.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/utils/chess_util.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/chess_test/domain/test_ai_turn.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/chess_test/domain/test_ai_turn.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FastAPI main" />
        <option value="FastAPI test_main" />
        <option value="Python Unit Test" />
        <option value="HTTP Public Environment File" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;yareach8345&quot;
  }
}</component>
  <component name="GitToolBoxStore">
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="develop" />
                    <option name="lastUsedInstant" value="1745985964" />
                  </RecentBranch>
                  <RecentBranch>
                    <option name="branchName" value="main" />
                    <option name="lastUsedInstant" value="1742438139" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$" />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/yareach8345/chaotic-chess-backend&quot;,
    &quot;accountId&quot;: &quot;341c54c2-c9c0-4a72-9894-386bfb4b11ed&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2uVylMXJgiseQoPZ6qIw8313IcZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;FastAPI.ChaoticChess.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #4.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #5.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.chess_api_test | #6.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.test_chess_api | #1.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.test_chess_api | #2.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.test_chess_api | #3.executor&quot;: &quot;Run&quot;,
    &quot;HTTP 요청.test_chess_api | #4.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.chess_test 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.database_test 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.domain 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.dto 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.langchain 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.MongoDBTest.test_get_date의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.MongoDBTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.MyTestCase.test_get_date의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.MyTestCase.test_ping의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.MyTestCase의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.mongodb_test.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test.chess_test.domain.test_ai_turn.TestAIMove.test_user_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_move.TestAIMove.test_user_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_move.TestAIMove.test_user_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_service.AIServiceTest.test_ai_service의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_checkmate의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_promotion의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_try_selves_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_try_users_king2의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_ai_try_users_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_change_piece_when_ai_trying_other_piece_then_on_the_start_cell의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_generate_a_piece_when_there_is_a_other_color_piece_on_the_start_cell의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_regen_black_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_regen_white_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove.test_user_illegal_move_but_illegal_move_not_except의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_ai_turn.TestAIMove의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_game.ChessGameTest.test_after_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_game.ChessGameTest.test_pass_all_steps의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_game.ChessGameTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_delete의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_get_by_id_with_not_exists_id의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_get_by_id의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_save의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_update의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository.test_use_repository의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.TestChessRepository의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_repository.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_end_game의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_game_init의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_game_reset의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_get_history의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_load_game의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_take_a_turn의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_try_load_game_with_wrong_id의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_user_checkmated의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_user_kill_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_when_game_ended_by_users_moved의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest.test_when_game_ended_by_users_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.ChessServiceTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_service.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_ai_generate_test의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_ai_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_generate_from_fen의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_generate_game의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_user_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest.test_user_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.ChessUtilTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_chess_util.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_game.GameTest.test_generate_game의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_game.GameTest.test_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_game.GameTest.test_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_game.GameTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_mongodb.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_get_end_square의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_get_piece의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_get_start_square의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_get_uci의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_to_algebraic의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_to_piece의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest.test_to_uci의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.MoveDtoTest의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_move_dto.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_turn.TestTurn.test_generate_next_turn의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_turn.TestTurn.test_generate_turn의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_turn.TestTurn의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_mo e.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove.test_user_checkmate의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove.test_user_illegal_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove.test_user_move_but_piece_part_is_wrong의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove.test_user_move의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove.test_user_try_kill_king의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.TestUserMove의 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.test_user_move.py 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python 테스트.utils 내 Python 테스트.executor&quot;: &quot;Run&quot;,
    &quot;Python.ai_client.executor&quot;: &quot;Run&quot;,
    &quot;Python.chess_game.executor&quot;: &quot;Run&quot;,
    &quot;Python.chess_service.executor&quot;: &quot;Run&quot;,
    &quot;Python.chess_util.executor&quot;: &quot;Run&quot;,
    &quot;Python.game.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_main.executor&quot;: &quot;Run&quot;,
    &quot;Python.turn_changer.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/yareach/coding/code/projects/chaotic-chess/chaotic-chess-backend&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mongo&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test/chess_test/domain" />
      <recent name="$PROJECT_DIR$/test/utils" />
      <recent name="$PROJECT_DIR$/test/repositories" />
      <recent name="$PROJECT_DIR$/test/mongodb" />
      <recent name="$PROJECT_DIR$/app/routes/v1/endpoint" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app/domain" />
      <recent name="$PROJECT_DIR$/test/chess_test" />
      <recent name="$PROJECT_DIR$/test" />
      <recent name="$PROJECT_DIR$/test/database_test" />
      <recent name="$PROJECT_DIR$/test/repositories" />
    </key>
  </component>
  <component name="RunManager" selected="FastAPI.ChaoticChess">
    <configuration name="ChaoticChess" type="Python.FastAPI">
      <option name="file" value="$PROJECT_DIR$/main.py" />
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="test_ai_turn.TestAIMove.test_ai_try_selves_king의 Python 테스트" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/chess_test/domain" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ai_turn.TestAIMove.test_ai_try_selves_king&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_ai_turn.TestAIMove.test_ai_try_users_king의 Python 테스트" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/chess_test/domain" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ai_turn.TestAIMove.test_ai_try_users_king&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_ai_turn.TestAIMove.test_ai_try_users_king2의 Python 테스트" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/chess_test/domain" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ai_turn.TestAIMove.test_ai_try_users_king2&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_ai_turn.TestAIMove.test_regen_black_king의 Python 테스트" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/chess_test/domain" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ai_turn.TestAIMove.test_regen_black_king&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_ai_turn.TestAIMove.test_regen_white_king의 Python 테스트" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="ChaoticChess" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/chess_test/domain" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_ai_turn.TestAIMove.test_regen_white_king&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python 테스트.test_ai_turn.TestAIMove.test_regen_black_king의 Python 테스트" />
        <item itemvalue="Python 테스트.test_ai_turn.TestAIMove.test_regen_white_king의 Python 테스트" />
        <item itemvalue="Python 테스트.test_ai_turn.TestAIMove.test_ai_try_users_king2의 Python 테스트" />
        <item itemvalue="Python 테스트.test_ai_turn.TestAIMove.test_ai_try_users_king의 Python 테스트" />
        <item itemvalue="Python 테스트.test_ai_turn.TestAIMove.test_ai_try_selves_king의 Python 테스트" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159" />
        <option value="bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="애플리케이션 수준" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="디폴트 작업">
      <changelist id="780e1a73-dc5b-4091-8cb5-ec55b7a8a30f" name="변경" comment="" />
      <created>1742348186003</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742348186003</updated>
      <workItem from="1742348187164" duration="1438000" />
      <workItem from="1742430338964" duration="2961000" />
      <workItem from="1742434206564" duration="3509000" />
      <workItem from="1742438441052" duration="40000" />
      <workItem from="1742516925262" duration="1458000" />
      <workItem from="1742521111331" duration="3409000" />
      <workItem from="1742699661471" duration="1385000" />
      <workItem from="1742705358384" duration="507000" />
      <workItem from="1742709887413" duration="4091000" />
      <workItem from="1742733702763" duration="7864000" />
      <workItem from="1742789740478" duration="7508000" />
      <workItem from="1742805485432" duration="2157000" />
      <workItem from="1742866062602" duration="711000" />
      <workItem from="1742993815423" duration="3083000" />
      <workItem from="1743080674067" duration="3165000" />
      <workItem from="1743123537281" duration="1734000" />
      <workItem from="1743125288093" duration="371000" />
      <workItem from="1743125672948" duration="128000" />
      <workItem from="1743125886010" duration="5161000" />
      <workItem from="1743395675954" duration="234000" />
      <workItem from="1743395924197" duration="1238000" />
      <workItem from="1743397534643" duration="3493000" />
      <workItem from="1743412967980" duration="1607000" />
      <workItem from="1743428762596" duration="8037000" />
      <workItem from="1743470979572" duration="213000" />
      <workItem from="1743482163940" duration="558000" />
      <workItem from="1743599331313" duration="5855000" />
      <workItem from="1743903660855" duration="30000" />
      <workItem from="1744035772215" duration="1663000" />
      <workItem from="1744087440787" duration="18000" />
      <workItem from="1744091911416" duration="1313000" />
      <workItem from="1744096831076" duration="3084000" />
      <workItem from="1744102685792" duration="3805000" />
      <workItem from="1744121896463" duration="2067000" />
      <workItem from="1744183564288" duration="6784000" />
      <workItem from="1744203796706" duration="7872000" />
      <workItem from="1744211985592" duration="3405000" />
      <workItem from="1744245164778" duration="719000" />
      <workItem from="1744247584476" duration="252000" />
      <workItem from="1744248739849" duration="1653000" />
      <workItem from="1744250694999" duration="2043000" />
      <workItem from="1745998448194" duration="1304000" />
      <workItem from="1746001646849" duration="832000" />
      <workItem from="1746021475845" duration="3283000" />
      <workItem from="1746058350523" duration="2653000" />
      <workItem from="1746083414674" duration="641000" />
      <workItem from="1746085170077" duration="905000" />
      <workItem from="1746091674996" duration="491000" />
      <workItem from="1746153854419" duration="17000" />
      <workItem from="1746290160263" duration="28000" />
      <workItem from="1746751808854" duration="2504000" />
      <workItem from="1746769356903" duration="4151000" />
      <workItem from="1746775172375" duration="36000" />
      <workItem from="1747128716537" duration="45000" />
      <workItem from="1747273532767" duration="5000" />
      <workItem from="1747358070907" duration="13000" />
      <workItem from="1747896468840" duration="7117000" />
      <workItem from="1748142010917" duration="341000" />
      <workItem from="1748145371086" duration="4728000" />
      <workItem from="1748172567378" duration="1599000" />
      <workItem from="1748441510086" duration="959000" />
      <workItem from="1748442742975" duration="393000" />
      <workItem from="1748491053777" duration="63000" />
      <workItem from="1748523799606" duration="3750000" />
      <workItem from="1748529527114" duration="312000" />
      <workItem from="1748568021993" duration="213000" />
    </task>
    <task id="LOCAL-00001" summary="init">
      <option name="closed" value="true" />
      <created>1742348216047</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1742348216047</updated>
    </task>
    <task id="LOCAL-00002" summary="init">
      <option name="closed" value="true" />
      <created>1742349311390</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1742349311390</updated>
    </task>
    <task id="LOCAL-00003" summary="init">
      <option name="closed" value="true" />
      <created>1742349337841</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1742349337841</updated>
    </task>
    <task id="LOCAL-00004" summary="init">
      <option name="closed" value="true" />
      <created>1742349354438</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1742349354438</updated>
    </task>
    <task id="LOCAL-00005" summary="init">
      <option name="closed" value="true" />
      <created>1742349530890</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1742349530890</updated>
    </task>
    <task id="LOCAL-00006" summary="init">
      <option name="closed" value="true" />
      <created>1742349601798</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1742349601798</updated>
    </task>
    <task id="LOCAL-00007" summary="init">
      <option name="closed" value="true" />
      <created>1742349629180</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1742349629180</updated>
    </task>
    <task id="LOCAL-00008" summary="init">
      <option name="closed" value="true" />
      <created>1742430806155</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1742430806155</updated>
    </task>
    <task id="LOCAL-00009" summary="init">
      <option name="closed" value="true" />
      <created>1742435036131</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1742435036131</updated>
    </task>
    <task id="LOCAL-00010" summary="init">
      <option name="closed" value="true" />
      <created>1742435878346</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1742435878346</updated>
    </task>
    <task id="LOCAL-00011" summary="init">
      <option name="closed" value="true" />
      <created>1742437618002</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1742437618002</updated>
    </task>
    <task id="LOCAL-00012" summary="init">
      <option name="closed" value="true" />
      <created>1742438288582</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1742438288582</updated>
    </task>
    <task id="LOCAL-00013" summary="init">
      <option name="closed" value="true" />
      <created>1742438467413</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1742438467413</updated>
    </task>
    <task id="LOCAL-00014" summary="init">
      <option name="closed" value="true" />
      <created>1742516998496</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1742516998496</updated>
    </task>
    <task id="LOCAL-00015" summary="chore: add mongodb connect info into .env&#10;&#10;.env파일에 MONGODB_CONNECTIOIN_STRING을 추가">
      <option name="closed" value="true" />
      <created>1742699795502</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1742699795502</updated>
    </task>
    <task id="LOCAL-00016" summary="feat: add mongo connection feature and add test&#10;&#10;몽고db에 연결할 수 있게 코드를 추가하였다.&#10;core/database.py의 get_mongo_client 팩토리 함수로 클라이언트를 생성할 수 있다.&#10;&#10;직접 생성하여 사용하지는 말고 이후 만들어질 container를 사용해서 사용해주길 바란다.">
      <option name="closed" value="true" />
      <created>1742717067191</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1742717067191</updated>
    </task>
    <task id="LOCAL-00017" summary="renamed class 'MongoDBTest' to 'TestMongoDB' and file mongodb_test.py to test_mongodb.py&#10;&#10;파이썬에서 주로 사용되는 형식으로 테스트 코드를 담은 파일명과 클래스 명을 변경하였습니다.">
      <option name="closed" value="true" />
      <created>1742740822791</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1742740822791</updated>
    </task>
    <task id="LOCAL-00018" summary="Refactor: change type of id field in ChessGameSchema from 'UUID' to 'str'&#10;&#10;몽고db에 데이터를 저장하는 프로젝트의 특성상 체스게임 데이터에 접근하기 위해 사용되는 식별자를 UUID에서 ObjectId로 변경하게 되었습니다.&#10;이에 맞추어 ChessGameSchema의 id필드 또한 str타입으로 바뀌에 되었습니다.&#10;&#10;이 변경의 이유는 아래와 같습니다.&#10;1. 몽고db의 특정 데이터에 접근하는 식별자라는 특성상 몽고db에 최적화되어 제작되었을 ObjectId측면이 기존 계획의 UUID보다 효율 적일것이라 판단 되었습니다.&#10;2. 조사를 해본 결과 기존에 UUID를 선택했던 이유인 '유일한 식별자가 필요하다.'라는 조건이 ObjectId의 작동방식으로도 충분히 만족할 것으로 판단 되었습니다.&#10;3. ObjectId는 str객체로 바꾸거나 그 역의 변환도 쉽게 가능하여 UUID와 마찬가지로 클라이언트와 통신하는 것에 장애가 될것이 없다 판단 하였습니다.">
      <option name="closed" value="true" />
      <created>1742741405751</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1742741405751</updated>
    </task>
    <task id="LOCAL-00019" summary="feat: add chess_repository&#10;&#10;mongodb에 접근하여 데이터를 생선, 읽기, 갱신(체스 말의 이동), 삭제하는 기능을 구현하였습니다.&#10;&#10;현제 chess_repository의 메서드는 아래와 같습니다.&#10;* save(ChessGameSchema)&#10;* get_by_id(chess_game_id)&#10;* update_by_moving(chess_game_id, chess_move_dto)&#10;* delete_data(chess_game_id)">
      <option name="closed" value="true" />
      <created>1742742434990</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1742742434990</updated>
    </task>
    <task id="LOCAL-00020" summary="feat: add dto for moving and chess_util&#10;&#10;chess의 기본적인 조작에 필요한 함수들을 구현하였다.&#10;만들어진 함수들은 다음과 같다.&#10;* init_game() - 새로운 게임을 생성후 Board 객체를 반환&#10;* fen_to_board(fen) - fen표기법으로 게임 정보를 담은 str를 받아 board 객체로 만들어 반환한다.&#10;* user_move(board, move_dto) - user의 턴을 진행한다. 이때 user의 움직임은 합법적인 움직임만 가능하다.&#10;* generate_piece(board, move_dto) - 특정 위치에 기물을 생성한다.&#10;* ai_move(board, move_dto) - ai의 턴을 진행한다. AIMoveDto의 type 필드의 값에 따라 움직임 혹은 생성 작업을 진행한다.">
      <option name="closed" value="true" />
      <created>1742996766957</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1742996766957</updated>
    </task>
    <task id="LOCAL-00021" summary="refactor: add IChessRepository&#10;&#10;구체적인 클래스가 아닌 인터페이스에 의존하게 하기 위해 IChessRepository라는 인터페이스를 추가했다.&#10;이 인터페이스를 만들어 둠으로서 이후 유지보수가 쉬워지고, 테스트시 구체적인 클래스를 대체할 목 객체를 만들어 볼 수도 있을 것으로 기대된다.&#10;추가로 container의 chess_repository 필드도 수정했다.">
      <option name="closed" value="true" />
      <created>1743083752871</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1743083752871</updated>
    </task>
    <task id="LOCAL-00022" summary="renamed: class 'ChessMoveDto' to 'DBUpdateWithMovingDto'&#10;&#10;move_dto.py의 AIMoveDto와 UserMoveDto가 추가되며 기존의 ChessMoveDto와 혼동될 가능성이 보였다. 혼동을 피하기 위해 ChessMoveDto의 이름을 chess_game 데이터베이스에 저장한다는의미롤 더욱 보이는 DBUpdateWithMovingDto로 변경했다.">
      <option name="closed" value="true" />
      <created>1743124831143</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1743124831143</updated>
    </task>
    <task id="LOCAL-00023" summary="feat: add Game class&#10;&#10;현재 게임의 정보를 담고 게임을 진행하는 역할을 가진 Game 클래스를 구현하였다.&#10;mongodb의 스케마로부터 생성되며, utils의 chess_util.py의 함수로 기능을 수행한다.&#10;user_move와 ai_move함수를 실행하기 전 현재턴이 유저 혹은 ai의 턴이 맞는지 검사하도록 하였다.">
      <option name="closed" value="true" />
      <created>1743125094637</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1743125094637</updated>
    </task>
    <task id="LOCAL-00024" summary="test: add test case for chess_util&#10;&#10;fen표기법을 가져와 board 객체를 반환하는 fen_to_board 함수의 테스트 코드를 추가함">
      <option name="closed" value="true" />
      <created>1743128259279</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1743128259279</updated>
    </task>
    <task id="LOCAL-00025" summary="feat: add function check target piece's owner.&#10;&#10;움직이고자 하는 기물이 자기 소유의 기물인지 확인하는 코드를 추가하였다.&#10;추가로 기물을 움직이고 난 후 _turn의 값을 변경시켜주는 코드를 추가했다.">
      <option name="closed" value="true" />
      <created>1743130002350</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1743130002350</updated>
    </task>
    <task id="LOCAL-00026" summary="fix: changed KNIGHT value 'k' to 'n'&#10;&#10;테스트 코드 작성 중 Knight의 약자는 n이나 k로 설정되어있던 것을 발견하여 수정하였다.">
      <option name="closed" value="true" />
      <created>1743130088673</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1743130088673</updated>
    </task>
    <task id="LOCAL-00027" summary="test: add test codes for Game class&#10;&#10;Game 클래스를 위한 테스트코드를 추가했다.&#10;추가하는 과정에서 발견한 버그를 수정하였고, 필요한 부분을 채워넣었다. (수정한 부분은 이미 이전 커밋으로 업데이트 되었다.)">
      <option name="closed" value="true" />
      <created>1743130214867</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1743130214867</updated>
    </task>
    <task id="LOCAL-00028" summary="feat: add classes about turn&#10;&#10;기존에 Game클래스가 &#10;게임 관련 정보 관리 + 게임 진행 &#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다.">
      <option name="closed" value="true" />
      <created>1743436783361</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1743436783361</updated>
    </task>
    <task id="LOCAL-00029" summary="feat: add classes about turn&#10;&#10;기존에 Game클래스가&#10;게임 관련 정보 관리 + 게임 진행&#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다.">
      <option name="closed" value="true" />
      <created>1743471015460</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1743471015460</updated>
    </task>
    <task id="LOCAL-00030" summary="feat: add classes about turn&#10;&#10;기존에 Game클래스가&#10;게임 관련 정보 관리 + 게임 진행&#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다.">
      <option name="closed" value="true" />
      <created>1743471124053</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1743471124053</updated>
    </task>
    <task id="LOCAL-00031" summary="edit: made prompt simple&#10;&#10;개발 프로세스를 바꾸었다.&#10;우선 GPT에서 일반적인 체스를 두도록 한 후 ai를 제외한 서버측의 개발을 완료한다.&#10;그 후 FrontEnd 개발을 시작하며, 동시에 여러 AI 모델과 체스를 진행하여 각 AI별 체스 플레이 정도를 모은다.&#10;그 후 데이터를 이용해 AI모델을 결정하고 개발을 재개할 예정이다.">
      <option name="closed" value="true" />
      <created>1744036311459</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1744036311459</updated>
    </task>
    <task id="LOCAL-00032" summary="feat:move_dto를 사용할 때 이동의 표기가 4자리 일 때도 올바른 값을 반환하도록 수정&#10;&#10;ai는 가끔 a2a3같은 네자리 대수표기법을 반환한다. 이는 폰을 움직일 경우 P를 생략할 수 있기 때문이다.&#10;그러나 네자리 표기를 사용할 경우 계획과는 형식이 맞지 않기에 에러가 났고 이를 고치기 위해 move_dto를 개선하였다.">
      <option name="closed" value="true" />
      <created>1744106448147</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1744106448147</updated>
    </task>
    <task id="LOCAL-00033" summary="feat: add setting code for container&#10;&#10;의존성 주입을 위한 Container 세팅을 진행&#10;Container에 두개의 service를 추가하였으며&#10;main.py의 메인함수에 의존성 주입을 위한 세팅 코드를 추가함">
      <option name="closed" value="true" />
      <created>1744185093617</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1744185093617</updated>
    </task>
    <task id="LOCAL-00034" summary="feat: add CORSMiddleware&#10;&#10;CORSMiddleware 미들웨어를 app에 추가하여 CORS문제를 해결하도록 하였다.">
      <option name="closed" value="true" />
      <created>1745986130007</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1745986130007</updated>
    </task>
    <task id="LOCAL-00035" summary="edit: CookieChechMiddleware 조건 수정&#10;&#10;15번줄의 uri에 따라 처리하는 분기 부분을 수정하였다.&#10;본 코드를 수정하게된 계기는 /docs에 들어갔을 때 docs에 들어가지 못하는 문제를 발견했다.&#10;문제는 15번 라인에있었으며 /game혹은 /game/으로 끝나지 않았기에 발생 한 것이었다.&#10;그래서 /api요청일 때 쿠키 검사를 실행하도록 수정하였다.&#10;&#10;이후 데코레이터를 사용하여 미들웨어를 통과하는 방식이 아닌 각각 엔드포인트에서 수정하게 할 예정이다.">
      <option name="closed" value="true" />
      <created>1745986387804</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1745986387804</updated>
    </task>
    <task id="LOCAL-00036" summary="edit: add codes for game_info_dto">
      <option name="closed" value="true" />
      <created>1746083768422</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1746083768422</updated>
    </task>
    <task id="LOCAL-00037" summary="edit : ai_turn 개선 &amp; chess_routes 수정">
      <option name="closed" value="true" />
      <created>1746083836831</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1746083836831</updated>
    </task>
    <task id="LOCAL-00038" summary="edit : game_info_dto에 의해 수정해야 하는 사항 수정">
      <option name="closed" value="true" />
      <created>1746084058967</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1746084058968</updated>
    </task>
    <task id="LOCAL-00039" summary="feat: 체스게임 게선">
      <option name="closed" value="true" />
      <created>1748142214125</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1748142214125</updated>
    </task>
    <task id="LOCAL-00040" summary="feat: 체스게임 게선">
      <option name="closed" value="true" />
      <created>1748491098926</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1748491098926</updated>
    </task>
    <option name="localTasksCounter" value="41" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="origin/feature/chess-service" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="feature/chess-service" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="TEXT_FILTER_SETTINGS">
                <TextFilterSettings>
                  <option name="REGEX" value="true" />
                </TextFilterSettings>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: add mongo connection feature and add test&#10;&#10;몽고db에 연결할 수 있게 코드를 추가하였다.&#10;core/database.py의 get_mongo_client 팩토리 함수로 클라이언트를 생성할 수 있다.&#10;&#10;직접 생성하여 사용하지는 말고 이후 만들어질 container를 사용해서 사용해주길 바란다." />
    <MESSAGE value="renamed class 'MongoDBTest' to 'TestMongoDB' and file mongodb_test.py to test_mongodb.py&#10;&#10;파이썬에서 주로 사용되는 형식으로 테스트 코드를 담은 파일명과 클래스 명을 변경하였습니다." />
    <MESSAGE value="Refactor: change type of id field in ChessGameSchema from 'UUID' to 'str'&#10;&#10;몽고db에 데이터를 저장하는 프로젝트의 특성상 체스게임 데이터에 접근하기 위해 사용되는 식별자를 UUID에서 ObjectId로 변경하게 되었습니다.&#10;이에 맞추어 ChessGameSchema의 id필드 또한 str타입으로 바뀌에 되었습니다.&#10;&#10;이 변경의 이유는 아래와 같습니다.&#10;1. 몽고db의 특정 데이터에 접근하는 식별자라는 특성상 몽고db에 최적화되어 제작되었을 ObjectId측면이 기존 계획의 UUID보다 효율 적일것이라 판단 되었습니다.&#10;2. 조사를 해본 결과 기존에 UUID를 선택했던 이유인 '유일한 식별자가 필요하다.'라는 조건이 ObjectId의 작동방식으로도 충분히 만족할 것으로 판단 되었습니다.&#10;3. ObjectId는 str객체로 바꾸거나 그 역의 변환도 쉽게 가능하여 UUID와 마찬가지로 클라이언트와 통신하는 것에 장애가 될것이 없다 판단 하였습니다." />
    <MESSAGE value="feat: add chess_repository&#10;&#10;mongodb에 접근하여 데이터를 생선, 읽기, 갱신(체스 말의 이동), 삭제하는 기능을 구현하였습니다.&#10;&#10;현제 chess_repository의 메서드는 아래와 같습니다.&#10;* save(ChessGameSchema)&#10;* get_by_id(chess_game_id)&#10;* update_by_moving(chess_game_id, chess_move_dto)&#10;* delete_data(chess_game_id)" />
    <MESSAGE value="feat: add dto for moving and chess_util&#10;&#10;chess의 기본적인 조작에 필요한 함수들을 구현하였다.&#10;만들어진 함수들은 다음과 같다.&#10;* init_game() - 새로운 게임을 생성후 Board 객체를 반환&#10;* fen_to_board(fen) - fen표기법으로 게임 정보를 담은 str를 받아 board 객체로 만들어 반환한다.&#10;* user_move(board, move_dto) - user의 턴을 진행한다. 이때 user의 움직임은 합법적인 움직임만 가능하다.&#10;* generate_piece(board, move_dto) - 특정 위치에 기물을 생성한다.&#10;* ai_move(board, move_dto) - ai의 턴을 진행한다. AIMoveDto의 type 필드의 값에 따라 움직임 혹은 생성 작업을 진행한다." />
    <MESSAGE value="refactor: add IChessRepository&#10;&#10;구체적인 클래스가 아닌 인터페이스에 의존하게 하기 위해 IChessRepository라는 인터페이스를 추가했다.&#10;이 인터페이스를 만들어 둠으로서 이후 유지보수가 쉬워지고, 테스트시 구체적인 클래스를 대체할 목 객체를 만들어 볼 수도 있을 것으로 기대된다.&#10;추가로 container의 chess_repository 필드도 수정했다." />
    <MESSAGE value="renamed: class 'ChessMoveDto' to 'DBUpdateWithMovingDto'&#10;&#10;move_dto.py의 AIMoveDto와 UserMoveDto가 추가되며 기존의 ChessMoveDto와 혼동될 가능성이 보였다. 혼동을 피하기 위해 ChessMoveDto의 이름을 chess_game 데이터베이스에 저장한다는의미롤 더욱 보이는 DBUpdateWithMovingDto로 변경했다." />
    <MESSAGE value="feat: add Game class&#10;&#10;현재 게임의 정보를 담고 게임을 진행하는 역할을 가진 Game 클래스를 구현하였다.&#10;mongodb의 스케마로부터 생성되며, utils의 chess_util.py의 함수로 기능을 수행한다.&#10;user_move와 ai_move함수를 실행하기 전 현재턴이 유저 혹은 ai의 턴이 맞는지 검사하도록 하였다." />
    <MESSAGE value="test: add test case for chess_util&#10;&#10;fen표기법을 가져와 board 객체를 반환하는 fen_to_board 함수의 테스트 코드를 추가함" />
    <MESSAGE value="feat: add function check target piece's owner.&#10;&#10;움직이고자 하는 기물이 자기 소유의 기물인지 확인하는 코드를 추가하였다.&#10;추가로 기물을 움직이고 난 후 _turn의 값을 변경시켜주는 코드를 추가했다." />
    <MESSAGE value="fix: changed KNIGHT value 'k' to 'n'&#10;&#10;테스트 코드 작성 중 Knight의 약자는 n이나 k로 설정되어있던 것을 발견하여 수정하였다." />
    <MESSAGE value="test: add test codes for Game class&#10;&#10;Game 클래스를 위한 테스트코드를 추가했다.&#10;추가하는 과정에서 발견한 버그를 수정하였고, 필요한 부분을 채워넣었다. (수정한 부분은 이미 이전 커밋으로 업데이트 되었다.)" />
    <MESSAGE value="feat: add classes about turn&#10;&#10;기존에 Game클래스가 &#10;게임 관련 정보 관리 + 게임 진행 &#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다." />
    <MESSAGE value="refactory: add classes about turn&#10;&#10;기존에 Game클래스가 &#10;게임 관련 정보 관리 + 게임 진행 &#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다." />
    <MESSAGE value="feat: add classes about turn&#10;&#10;기존에 Game클래스가&#10;게임 관련 정보 관리 + 게임 진행&#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다." />
    <MESSAGE value="refactor: add class about turn&#10;&#10;기존에 Game클래스가&#10;게임 관련 정보 관리 + 게임 진행&#10;와 같은 두가지 역할을 담는거 같아 두 역할을 구분했다.&#10;&#10;움직이는 작업(Turn)과 체스판 정보 갱신 and 보관을 맡을 ChessGame으로 분리함으로 이동 전후로 처리과정이 필요할 때 Turn 객체를 수정하면 되고, ChessGame은 Turn에서 데이터를 불러오는 마춤형 저장소가 되었다." />
    <MESSAGE value="edit: made prompt simple&#10;&#10;개발 프로세스를 바꾸었다.&#10;우선 GPT에서 일반적인 체스를 두도록 한 후 ai를 제외한 서버측의 개발을 완료한다.&#10;그 후 FrontEnd 개발을 시작하며, 동시에 여러 AI 모델과 체스를 진행하여 각 AI별 체스 플레이 정도를 모은다.&#10;그 후 데이터를 이용해 AI모델을 결정하고 개발을 재개할 예정이다." />
    <MESSAGE value="feat:move_dto를 사용할 때 이동의 표기가 4자리 일 때도 올바른 값을 반환하도록 수정&#10;&#10;ai는 가끔 a2a3같은 네자리 대수표기법을 반환한다. 이는 폰을 움직일 경우 P를 생략할 수 있기 때문이다.&#10;그러나 네자리 표기를 사용할 경우 계획과는 형식이 맞지 않기에 에러가 났고 이를 고치기 위해 move_dto를 개선하였다." />
    <MESSAGE value="feat: add setting code for container&#10;&#10;의존성 주입을 위한 Container 세팅을 진행&#10;Container에 두개의 service를 추가하였으며&#10;main.py의 메인함수에 의존성 주입을 위한 세팅 코드를 추가함" />
    <MESSAGE value="feat: add CORSMiddleware&#10;&#10;CORSMiddleware 미들웨어를 app에 추가하여 CORS문제를 해결하도록 하였다." />
    <MESSAGE value="edit: CookieChechMiddleware 조건 수정&#10;&#10;15번줄의 uri에 따라 처리하는 분기 부분을 수정하였다.&#10;본 코드를 수정하게된 계기는 /docs에 들어갔을 때 docs에 들어가지 못하는 문제를 발견했다.&#10;문제는 15번 라인에있었으며 /game혹은 /game/으로 끝나지 않았기에 발생 한 것이었다.&#10;그래서 /api요청일 때 쿠키 검사를 실행하도록 수정하였다.&#10;&#10;이후 데코레이터를 사용하여 미들웨어를 통과하는 방식이 아닌 각각 엔드포인트에서 수정하게 할 예정이다." />
    <MESSAGE value="edit: add codes for game_info_dto" />
    <MESSAGE value="edit : ai_turn 개선 &amp; chess_routes 수정" />
    <MESSAGE value="edit : game_info_dto에 의해 수정해야 하는 사항 수정" />
    <MESSAGE value="feat: 체스게임 게선" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: 체스게임 게선" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ChaoticChess$.coverage" NAME=" 커버리지 결과" MODIFIED="1744252324643" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test/chess_test/services" />
    <SUITE FILE_PATH="coverage/chaotic_chess_backend$.coverage" NAME=" 커버리지 결과" MODIFIED="1748529559908" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test/chess_test/domain" />
    <SUITE FILE_PATH="coverage/ChaoticChess$main.coverage" NAME="main 커버리지 결과" MODIFIED="1744211767803" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ChaoticChess$game.coverage" NAME="game 커버리지 결과" MODIFIED="1743081764305" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/domain" />
    <SUITE FILE_PATH="coverage/ChaoticChess$turn_changer.coverage" NAME="turn_changer 커버리지 결과" MODIFIED="1743431169064" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/domain" />
    <SUITE FILE_PATH="coverage/ChaoticChess$chess_service.coverage" NAME="chess_service 커버리지 결과" MODIFIED="1744099851029" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/services" />
    <SUITE FILE_PATH="coverage/ChaoticChess$test_main.coverage" NAME="test_main 커버리지 결과" MODIFIED="1742740519849" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test" />
    <SUITE FILE_PATH="coverage/ChaoticChess$ChaoticChess.coverage" NAME="ChaoticChess 커버리지 결과" MODIFIED="1746771839115" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/ChaoticChess$testing.coverage" NAME="testing 커버리지 결과" MODIFIED="1743310468343" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
    <SUITE FILE_PATH="coverage/ChaoticChess$chess_util.coverage" NAME="chess_util 커버리지 결과" MODIFIED="1742994266376" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/utils" />
    <SUITE FILE_PATH="coverage/chaotic_chess_backend$ChaoticChess.coverage" NAME="ChaoticChess 커버리지 결과" MODIFIED="1748568024209" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/ChaoticChess$chess_game.coverage" NAME="chess_game 커버리지 결과" MODIFIED="1743431754825" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/domain" />
    <SUITE FILE_PATH="coverage/ChaoticChess$ai_client.coverage" NAME="ai_client 커버리지 결과" MODIFIED="1744099420602" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/core" />
  </component>
</project>